<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.job.mapper.ChatMapper" >
  <resultMap id="BaseResultMap" type="com.job.pojo.Chat" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="sender" property="sender" jdbcType="BIT" />
    <!--  关联job表-->
    <association property="job" javaType="com.job.pojo.Job" columnPrefix="j_">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
    </association>
    <!--  关联company表-->
    <association property="company" javaType="com.job.pojo.Company" columnPrefix="c_">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="logoUrl" property="logourl" jdbcType="VARCHAR" />
    </association>
    <!--  关联student表-->
    <association property="student" javaType="com.job.pojo.Student" columnPrefix="s_">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="avatar" property="avatar" jdbcType="VARCHAR" />
      <result column="education" property="education" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from chat
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.job.pojo.Chat" useGeneratedKeys="true" keyProperty="id" >
    insert into chat (student_id, company_id, job_id, message, sender)
    values (#{studentId}, #{companyId}, #{jobId}, #{message}, #{sender})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.job.pojo.Chat" >
    update chat
    set student_id = #{studentId},
      company_id = #{companyId},
      job_id = #{jobId},
      message = #{message},
      sender = #{sender}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from chat
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select *
    from chat
  </select>
  <select id="selectCountByStudentId" resultType="java.lang.Integer">
    select count(*)
    from chat
    where student_id = #{studentId}
  </select>
  <select id="selectCountByCompanyId" resultType="java.lang.Integer">
    select count(*)
    from chat
    where company_id = #{companyId}
  </select>
  <select id="selectAllByStudentId" resultMap="BaseResultMap">
    select c.*,
       s.name as s_name,
       s.avatar as s_avatar,
       s.education as s_education,
       j.`name` as j_name,
       com.name as c_name,
       com.logoUrl as c_logourl
    from chat c
    left join job j
    on c.job_id = j.id
    left join student s
    on c.student_id = s.id
    left join company com
    on c.company_id = com.id
    where c.student_id = #{studentId}
  </select>
  <select id="selectAllByCompanyId" resultMap="BaseResultMap">
    select c.*,
       s.name as s_name,
       s.avatar as s_avatar,
       s.education as s_education,
       j.`name` as j_name,
       com.name as c_name,
       com.logoUrl as c_logourl
    from chat c
    left join job j
    on c.job_id = j.id
    left join student s
    on c.student_id = s.id
    left join company com
    on c.company_id = com.id
    where c.company_id = #{companyId}
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select c.*,
       s.name as s_name,
       s.avatar as s_avatar,
       s.education as s_education,
       j.`name` as j_name,
       com.name as c_name,
       com.logoUrl as c_logourl
    from chat c
    left join job j
    on c.job_id = j.id
    left join student s
    on c.student_id = s.id
    left join company com
    on c.company_id = com.id
    where c.company_id = #{companyId} and c.student_id = #{studentId}
  </select>
</mapper>